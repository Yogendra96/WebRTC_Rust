version: '3.8'

services:
  webrtc-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: webrtc-video-chat
    ports:
      - "5001:5001"
    environment:
      - RUST_LOG=info
      - DATABASE_URL=sqlite:/app/data/chat.db
      - JWT_SECRET=${JWT_SECRET:-your-secret-key-change-in-production}
      - TURN_SERVER=${TURN_SERVER:-}
      - TURN_USERNAME=${TURN_USERNAME:-}
      - TURN_CREDENTIAL=${TURN_CREDENTIAL:-}
    volumes:
      - app_data:/app/data
      - ./static:/app/static:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - webrtc_network

  # Optional: Reverse proxy with SSL termination
  nginx:
    image: nginx:alpine
    container_name: webrtc-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - webrtc-app
    restart: unless-stopped
    networks:
      - webrtc_network

  # Optional: Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: webrtc-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - webrtc_network

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: webrtc-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - webrtc_network

  # Optional: Coturn TURN server
  coturn:
    image: coturn/coturn:latest
    container_name: webrtc-coturn
    ports:
      - "3478:3478/udp"
      - "3478:3478/tcp"
      - "5349:5349/tcp"
      - "49152-65535:49152-65535/udp"
    environment:
      - TURN_USERNAME=${TURN_USERNAME:-turnuser}
      - TURN_PASSWORD=${TURN_PASSWORD:-turnpassword}
    volumes:
      - ./turnserver.conf:/etc/coturn/turnserver.conf:ro
    restart: unless-stopped
    networks:
      - webrtc_network

volumes:
  app_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  webrtc_network:
    driver: bridge